<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ACM on Terraform Workshop</title>
    <link>/terraform-workshop/provisioning/acm/</link>
    <description>Recent content in ACM on Terraform Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    
	<atom:link href="/terraform-workshop/provisioning/acm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>variable.tf</title>
      <link>/terraform-workshop/provisioning/acm/variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/terraform-workshop/provisioning/acm/variable/</guid>
      <description>variable &amp;#34;region&amp;#34; { description = &amp;#34;생성될 리전.&amp;#34; type = string default = &amp;#34;us-east-1&amp;#34; } variable &amp;#34;domain_root&amp;#34; { description = &amp;#34;Route53 에 등록된 도메인 명&amp;#34; type = string default = &amp;#34;mzdev.be&amp;#34; } variable &amp;#34;domain_name&amp;#34; { description = &amp;#34;ACM 인증서를 생성할 도메인 명&amp;#34; type = string default = &amp;#34;demo-api-workshop.mzdev.be&amp;#34; } </description>
    </item>
    
    <item>
      <title>provider.tf</title>
      <link>/terraform-workshop/provisioning/acm/provider/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/terraform-workshop/provisioning/acm/provider/</guid>
      <description>us-east-1 리전을 사용 하도록 합니다.
provider &amp;#34;aws&amp;#34; { region = var.region } </description>
    </item>
    
    <item>
      <title>acm.tf</title>
      <link>/terraform-workshop/provisioning/acm/acm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/terraform-workshop/provisioning/acm/acm/</guid>
      <description>AWS Certificate Manager 에 해당도메인에 해당하는 인증서를 만들도록 합니다.
resource &amp;#34;aws_acm_certificate&amp;#34; &amp;#34;cert&amp;#34; { domain_name = var.domain_name subject_alternative_names = [ &amp;#34;*.${var.domain_name}&amp;#34; ] validation_method = &amp;#34;DNS&amp;#34; } resource &amp;#34;aws_route53_record&amp;#34; &amp;#34;cert&amp;#34; { zone_id = data.aws_route53_zone.this.id name = aws_acm_certificate.cert.domain_validation_options[0].resource_record_name type = aws_acm_certificate.cert.domain_validation_options[0].resource_record_type ttl = 60 records = [ aws_acm_certificate.cert.domain_validation_options[0].resource_record_value, ] } resource &amp;#34;aws_acm_certificate_validation&amp;#34; &amp;#34;cert&amp;#34; { certificate_arn = aws_acm_certificate.cert.arn validation_record_fqdns = [ aws_route53_record.cert.fqdn, ] } </description>
    </item>
    
    <item>
      <title>route53.tf</title>
      <link>/terraform-workshop/provisioning/acm/route53/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/terraform-workshop/provisioning/acm/route53/</guid>
      <description>zone_id 를 획득 하기위해 data 타입으로 조회 합니다.
data &amp;#34;aws_route53_zone&amp;#34; &amp;#34;this&amp;#34; { name = var.domain_root } </description>
    </item>
    
    <item>
      <title>output.tf</title>
      <link>/terraform-workshop/provisioning/acm/output/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/terraform-workshop/provisioning/acm/output/</guid>
      <description>인증서 arn 뿐 아니라, route53 의 zond_id 도 같이 리턴하여 활용 할수 있도록 했습니다.
output &amp;#34;zone_id&amp;#34; { value = data.aws_route53_zone.this.id } output &amp;#34;name&amp;#34; { value = data.aws_route53_zone.this.name } output &amp;#34;certificate_id&amp;#34; { value = aws_acm_certificate.cert.id } output &amp;#34;certificate_arn&amp;#34; { value = aws_acm_certificate.cert.arn } </description>
    </item>
    
  </channel>
</rss>